name: Test-braindecode
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  test:
    name: dev ${{ matrix.os }}, py-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.8" ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout MOABB
        uses: actions/checkout@v4

      - name: Checkout Braindecode
        uses: actions/checkout@v4
        with:
          repository: braindecode/braindecode
          path: braindecode

      - name: Create local data folder
        if: runner.os != 'Windows'
        run: |
          mkdir ~/mne_data

      - name: Create/Restore MNE Data Cache
        if: runner.os != 'Windows'
        id: cache-mne_data
        uses: actions/cache@v3
        with:
          path: ~/mne_data
          key: ${{ runner.os }}-mne_data

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        if: runner.os != 'Windows'
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key:
            testvenv-braindecode-${{ matrix.os }}-py${{matrix.python-version}}-${{
            hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        if: |
          (runner.os != 'Windows') &&
          (steps.cached-poetry-dependencies.outputs.cache-hit != 'true')
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Install and test braindecode
        run: |
          source $VENV
          cd braindecode
          pip install -e .[tests]
          pytest test/

      # poetry run pip install -U https://api.github.com/repos/braindecode/braindecode/zipball/master
